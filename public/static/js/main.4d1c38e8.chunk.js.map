{"version":3,"sources":["logo.svg","components/Row.js","components/Table.js","pages/HomePage.js","pages/CreatePage.js","pages/EditPage.js","App.js","reportWebVitals.js","index.js"],"names":["Row","exercise","deleteExercise","editExercise","name","reps","weight","unit","date","onClick","_id","Table","exercises","map","i","HomePage","setExerciseToEdit","useState","setExercises","history","useHistory","loadExercises","a","fetch","response","json","data","method","status","filter","e","console","error","useEffect","push","to","CreatePage","setName","setReps","setWeight","setUnit","setDate","addExercise","newExercise","body","JSON","stringify","headers","alert","type","value","onChange","target","EditPage","exerciseToEdit","editedExercise","App","className","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d1c38e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport {MdDeleteForever, MdEdit } from 'react-icons/md';\n\nfunction Row({ exercise, deleteExercise, editExercise }) {\n    return (\n        <tr>\n            <td>{exercise.name}</td>\n            <td>{exercise.reps}</td>\n            <td>{exercise.weight}</td>\n            <td>{exercise.unit}</td>\n            <td>{exercise.date}</td>\n            <td><MdEdit onClick={() => editExercise(exercise)} /></td>\n            <td><MdDeleteForever onClick={() => deleteExercise(exercise._id)} /></td>\n        </tr>\n    );\n}\n\nexport default Row;","import React from 'react';\nimport Row from './Row';\n\nfunction Table({ exercises, deleteExercise, editExercise }) {\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Reps</th>\n                    <th>Weight</th>\n                    <th>Unit</th>\n                    <th>Date</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {exercises.map((exercise, i) => <Row exercise={exercise}\n                    deleteExercise={deleteExercise}\n                    editExercise={editExercise}\n                    key={i} />)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default Table;","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Table from '../components/Table';\n\nfunction HomePage({ setExerciseToEdit }) {\n    const [exercises, setExercises] = useState([]);\n    const history = useHistory();\n\n    const loadExercises = async () => {\n        const response = await fetch('/exercises');\n        const data = await response.json();\n        setExercises(data);\n    }\n\n    const deleteExercise = async _id => {\n        const response = await fetch(`/exercises/${_id}`, { method: 'DELETE' });\n        if (response.status === 204) {\n            setExercises(exercises.filter(e => e._id !== _id));\n        } else {\n            console.error(`Failed to delete exercise with _id = ${_id}, status code = ${response.status}`);\n        }\n    };\n\n    const editExercise = exercise => {\n        setExerciseToEdit(exercise);\n        history.push('/edit-exercise');\n    }\n\n    useEffect(() => {\n        loadExercises();\n    }, []);\n\n    return (\n        <>\n            <h1>Exercise Tracker</h1>\n            <p>Keep track of your workout regimen.</p>\n            <Table exercises={exercises} deleteExercise={deleteExercise} editExercise={editExercise} />\n            <Link to=\"/add-exercise\">Add an exercise</Link>\n        </>\n    );\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction CreatePage() {\n    const [name, setName] = useState('');\n    const [reps, setReps] = useState('');\n    const [weight, setWeight] = useState('');\n    const [unit, setUnit] = useState('lbs');\n    const [date, setDate] = useState('');\n\n    const history = useHistory();\n\n    const addExercise = async () => {\n        const newExercise = {name, reps, weight, unit, date};\n        const response = await fetch('/exercises', {\n            method: 'POST',\n            body: JSON.stringify(newExercise),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        if (response.status === 201) {\n            alert(\"Successfully added the exercise\");\n        } else {\n            alert(`Failed to add exercise, status code = ${response.status}`);\n        }\n        history.push(\"/\");\n    }\n\n    return (\n        <div>\n            <h1>Add Exercise</h1>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Reps</th>\n                        <th>Weight</th>\n                        <th>Unit</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <input \n                                type=\"text\"\n                                value={name}\n                                onChange={e => setName(e.target.value)} />\n                        </td>\n                        <td>\n                            <input \n                                type=\"number\"\n                                value={reps}\n                                onChange={e => setReps(e.target.value)} />\n                        </td>\n                        <td>\n                            <input \n                                type=\"number\"\n                                value={weight}\n                                onChange={e => setWeight(e.target.value)} />\n                        </td>\n                        <td>\n                            <select value={unit} onChange={e => setUnit(e.target.value)}>\n                                <option value=\"lbs\">lbs</option>\n                                <option value=\"kgs\">kgs</option>\n                            </select>\n                        </td>\n                        <td>\n                            <input \n                                type=\"text\"\n                                value={date}\n                                onChange={e => setDate(e.target.value)} />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <button\n                onClick={addExercise}\n            >Add</button>\n        </div>\n    );\n}\n\nexport default CreatePage;","import React, {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction EditPage({ exerciseToEdit }) {\n    const [name, setName] = useState(exerciseToEdit.name);\n    const [reps, setReps] = useState(exerciseToEdit.reps);\n    const [weight, setWeight] = useState(exerciseToEdit.weight);\n    const [unit, setUnit] = useState(exerciseToEdit.unit);\n    const [date, setDate] = useState(exerciseToEdit.date);\n\n    const history = useHistory();\n\n    const editExercise = async () => {\n        const editedExercise = {name, reps, weight, unit, date};\n        const response = await fetch(`/exercises/${exerciseToEdit._id}`, {\n            method: 'PUT',\n            body: JSON.stringify(editedExercise),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        if (response.status === 200) {\n            alert('Successfully edited the exercise');\n        } else {\n            alert(`Failed to edit the exercise, status code = ${response.status}`);\n        }\n        history.push('/');\n    };\n\n    return (\n        <div>\n            <h1>Edit Exercise</h1>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Reps</th>\n                        <th>Weight</th>\n                        <th>Unit</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <input \n                                type=\"text\"\n                                value={name}\n                                onChange={e => setName(e.target.value)} />\n                        </td>\n                        <td>\n                            <input \n                                type=\"number\"\n                                value={reps}\n                                onChange={e => setReps(e.target.value)} />\n                        </td>\n                        <td>\n                            <input \n                                type=\"number\"\n                                value={weight}\n                                onChange={e => setWeight(e.target.value)} />\n                        </td>\n                        <td>\n                            <select value={unit} onChange={e => setUnit(e.target.value)}>\n                                <option value=\"lbs\">lbs</option>\n                                <option value=\"kgs\">kgs</option>\n                            </select>\n                        </td>\n                        <td>\n                            <input \n                                type=\"text\"\n                                value={date}\n                                onChange={e => setDate(e.target.value)} />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <button\n                onClick={editExercise}\n            >Save</button>\n        </div>\n    );\n}\n\nexport default EditPage;","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport CreatePage from './pages/CreatePage';\nimport EditPage from './pages/EditPage';\n\nfunction App() {\n  const [exerciseToEdit, setExerciseToEdit] = useState();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"App-header\">\n          <Route path=\"/\" exact>\n            <HomePage setExerciseToEdit={setExerciseToEdit} />\n          </Route>\n          <Route path=\"/add-exercise\" >\n            <CreatePage />\n          </Route>\n          <Route path=\"/edit-exercise\" >\n            <EditPage exerciseToEdit={exerciseToEdit} />\n          </Route>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}